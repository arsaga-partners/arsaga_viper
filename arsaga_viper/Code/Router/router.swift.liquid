//
//  {{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit

protocol {{ module_info.name }}Wireframe {
 
}

final class {{ module_info.name }}Router {

    private unowned let viewController: UIViewController

    init(viewController: UIViewController) {
        self.viewController = viewController
    }

    static func assembleModules() -> UIViewController {
        let view = {{ module_info.name }}ViewController.instantiate() as! {{ module_info.name }}ViewController
        let interactor = {{ module_info.name }}Interactor()
        let router = {{ module_info.name }}Router(viewController: view)
        let presenter = {{ module_info.name }}Presenter(view: view,
                                              interactor: interactor,
                                              router: router)
        view.inject(presenter: presenter)
        return view
    }
}

extension {{ module_info.name }}Router: {{ module_info.name }}Wireframe {

}
